{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showingDetails","eventDetails","setState","event","this","props","className","summary","dateTime","timeZone","location","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","start","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authURL","history","pushState","pathname","newurl","protocol","host","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b8bc1d54.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n    state = {\n        showingDetails: false\n    }\n\n    eventDetails = () => {\n        const showingDetails = this.state.showingDetails;\n        if (showingDetails === false) {\n            this.setState({\n                showingDetails: true\n            })\n        } else {\n            this.setState({\n                showingDetails: false\n            })\n        }\n    };\n\n    render() {\n        const { event } = this.props;\n        return <div className=\"event-container\">\n            <h1 className=\"event-summary\">{event.summary}</h1>\n            <p className=\"event-date\">{event.dateTime}</p>\n            <p className=\"event-timezone\">{event.timeZone}</p>\n            <p className=\"event-location\">{event.location}</p>\n            {this.state.showingDetails ? (<div />) : (<button className=\"show-hide\" onClick={this.eventDetails}>See Details</button>)}\n            {this.state.showingDetails ? (<div className=\"about-event\" />) : (<div />)}\n        </div>\n    }\n}\n\nexport default Event;","\nimport React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    };\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.props.updateEvents(suggestion);\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} onFocus={() => { this.setState({ showSuggestions: true }) }} />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)} >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","\nimport React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        query: 32\n    };\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({\n            query: value\n        })\n    }\n    render() {\n        return (\n            <div className=\"number-of-events\">\n                <input className=\"events-number\" type=\"text\" value={this.state.query} onChange={this.handleInputChanged} />\n            </div>\n        )\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    }\n];\n\nconst eventData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n        \"timeZone\": \"Europe/Berlin\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    }\n];\n\n\nexport { mockData, eventData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n    return result;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://5u1d5pqz15.execute-api.us-east-2.amazonaws.com/dev/api/token/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://5u1d5pqz15.execute-api.us-east-2.amazonaws.com/dev/api/get-events/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get('code');\n\n        if (!code) {\n            const results = await axios.get(\n                \"https://5u1d5pqz15.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authURL } = results.data;\n            return (window.location.href = authURL);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './App.css';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}