{"ast":null,"code":"import _classCallCheck from\"/Users/timtaylor/Documents/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/timtaylor/Documents/meet/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/timtaylor/Documents/meet/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/timtaylor/Documents/meet/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CitySearch=/*#__PURE__*/function(_Component){_inherits(CitySearch,_Component);var _super=_createSuper(CitySearch);function CitySearch(){var _this;_classCallCheck(this,CitySearch);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',suggestions:[]};_this.handleInputChanged=function(event){var value=event.target.value;var suggestions=_this.props.locations.filter(function(location){return location.toUpperCase().indexOf(value.toUpperCase())>-1;});_this.setState({query:value,suggestions:suggestions});};_this.handleItemClicked=function(suggestion){_this.setState({query:suggestion});};return _this;}_createClass(CitySearch,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"CitySearch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",value:this.state.query,onChange:this.handleInputChanged}),/*#__PURE__*/_jsxs(\"ul\",{className:\"suggestions\",children:[this.state.suggestions.map(function(suggestion){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked(suggestion);},children:suggestion},suggestion);}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"See all cities\"})},'all')]})]});}}]);return CitySearch;}(Component);export default CitySearch;","map":{"version":3,"sources":["/Users/timtaylor/Documents/meet/src/CitySearch.js"],"names":["React","Component","CitySearch","state","query","suggestions","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","map"],"mappings":"wbAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,U,2UACFC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,WAAW,CAAE,EAFT,C,OAIRC,kB,CAAqB,SAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAMH,CAAAA,WAAW,CAAG,MAAKK,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,SAACC,QAAD,CAAc,CAC1D,MAAOA,CAAAA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BP,KAAK,CAACM,WAAN,EAA/B,EAAsD,CAAC,CAA9D,CACH,CAFmB,CAApB,CAGA,MAAKE,QAAL,CAAc,CACVZ,KAAK,CAAEI,KADG,CAEVH,WAAW,CAAXA,WAFU,CAAd,EAIH,C,OAEDY,iB,CAAoB,SAACC,UAAD,CAAgB,CAChC,MAAKF,QAAL,CAAc,CACVZ,KAAK,CAAEc,UADG,CAAd,EAGH,C,4DAED,iBAAS,iBACL,mBACI,aAAK,SAAS,CAAC,YAAf,wBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,MAA7B,CAAoC,KAAK,CAAE,KAAKf,KAAL,CAAWC,KAAtD,CAA6D,QAAQ,CAAE,KAAKE,kBAA5E,EADJ,cAEI,YAAI,SAAS,CAAC,aAAd,WACK,KAAKH,KAAL,CAAWE,WAAX,CAAuBc,GAAvB,CAA2B,SAACD,UAAD,qBACxB,WAAqB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuBC,UAAvB,CAAN,EAA9B,UAA0EA,UAA1E,EAASA,UAAT,CADwB,EAA3B,CADL,cAII,iCACI,qCADJ,EAAQ,KAAR,CAJJ,GAFJ,GADJ,CAaH,C,wBApCoBjB,S,EAuCzB,cAAeC,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: []\n    };\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} />\n                <ul className=\"suggestions\">\n                    {this.state.suggestions.map((suggestion) => (\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)} >{suggestion}</li>\n                    ))}\n                    <li key='all'>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}