{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/meet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './App.css';\nimport './nprogress.css';\nimport icon from './images/github-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      eventsByLocation: null,\n      currentLocation: 'all'\n    };\n\n    this.updateEvents = location => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n        const {\n          numberOfEvents\n        } = this.state;\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        const eventsByLocation = locationEvents.length;\n        this.setState({\n          events: filteredEvents,\n          eventsByLocation: eventsByLocation,\n          currentLocation: location\n        });\n      });\n    };\n\n    this.updateEventCount = eventCount => {\n      const {\n        currentLocation\n      } = this.state;\n      this.setState({\n        numberOfEvents: eventCount\n      });\n      this.updateEvents(currentLocation);\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const {\n      numberOfEvents\n    } = this.state;\n    getEvents().then(events => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events),\n          eventsByLocation: events.length\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"github-logo\",\n        href: \"https://github.com/TimBTaylor/meet\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"github-logo\",\n          src: icon,\n          alt: \"github logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"intro\",\n        children: \"Meet App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"enter-city\",\n        children: \"Enter a city:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        updateEvents: this.updateEvents,\n        locations: this.state.locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateEventCount: this.updateEventCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/timtaylor/Documents/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","icon","App","state","events","locations","numberOfEvents","eventsByLocation","currentLocation","updateEvents","location","then","locationEvents","filter","event","filteredEvents","slice","length","setState","updateEventCount","eventCount","componentDidMount","mounted","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './App.css';\nimport './nprogress.css';\nimport icon from './images/github-logo.png';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    eventsByLocation: null,\n    currentLocation: 'all'\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { numberOfEvents } = this.state;\n\n    getEvents().then(events => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events),\n          eventsByLocation: events.length\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = location => {\n    getEvents().then(events => {\n      const locationEvents = (location === 'all')\n        ? events\n        : events.filter(event => event.location === location);\n      const { numberOfEvents } = this.state;\n      const filteredEvents = locationEvents.slice(0, numberOfEvents);\n      const eventsByLocation = locationEvents.length;\n      this.setState({\n        events: filteredEvents,\n        eventsByLocation: eventsByLocation,\n        currentLocation: location\n      });\n    });\n  }\n\n  updateEventCount = eventCount => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a className=\"github-logo\" href=\"https://github.com/TimBTaylor/meet\"><img className=\"github-logo\" src={icon} alt=\"github logo\" ></img></a>\n        <h1 className=\"intro\">Meet App</h1>\n        <h4 className=\"enter-city\">Enter a city:</h4>\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventCount={this.updateEventCount} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}