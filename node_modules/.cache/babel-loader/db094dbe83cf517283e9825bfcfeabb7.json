{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/meet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './App.css';\nimport './nprogress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      locations: []\n    };\n\n    this.updateEvents = location => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n        this.setState({\n          events: locationEvents\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then(events => {\n      if (this.mounted) {\n        this.setState({\n          events,\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CitySearch, {\n        updateEvents: this.updateEvents,\n        locations: this.state.locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/timtaylor/Documents/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","App","state","events","locations","updateEvents","location","then","locationEvents","filter","event","setState","componentDidMount","mounted","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,OAAO,iBAAP;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE;AAFL,KAFkB;;AAAA,SAoB1BC,YApB0B,GAoBVC,QAAD,IAAc;AAC3BN,MAAAA,SAAS,GAAGO,IAAZ,CAAkBJ,MAAD,IAAY;AAC3B,cAAMK,cAAc,GAAIF,QAAQ,KAAK,KAAd,GAAuBH,MAAvB,GAAgCA,MAAM,CAACM,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACJ,QAAN,KAAmBA,QAA5C,CAAvD;AACA,aAAKK,QAAL,CAAc;AACZR,UAAAA,MAAM,EAAEK;AADI,SAAd;AAGD,OALD;AAOD,KA5ByB;AAAA;;AAO1BI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAe,IAAf;AACAb,IAAAA,SAAS,GAAGO,IAAZ,CAAkBJ,MAAD,IAAY;AAC3B,UAAI,KAAKU,OAAT,EAAkB;AAChB,aAAKF,QAAL,CAAc;AAAER,UAAAA,MAAF;AAAUC,UAAAA,SAAS,EAAEL,gBAAgB,CAACI,MAAD;AAArC,SAAd;AACD;AACF,KAJD;AAKD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,OAAL,GAAe,KAAf;AACD;;AAYDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKV,YAA/B;AAA6C,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWE;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAtCyB;;AAyC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './App.css';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}