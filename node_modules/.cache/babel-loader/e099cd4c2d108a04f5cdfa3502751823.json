{"ast":null,"code":"var _jsxFileName = \"/Users/timtaylor/Documents/meet/src/CitySearch.js\";\nimport React, { Component } from 'react';\nimport './CitySearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CitySearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      suggestions: [],\n      showSuggestions: undefined\n    };\n\n    this.handleInputChanged = event => {\n      const value = event.target.value;\n      const suggestions = this.props.locations.filter(location => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      });\n      this.setState({\n        query: value,\n        suggestions\n      });\n    };\n\n    this.handleItemClicked = suggestion => {\n      this.props.updateEvents(suggestion);\n      this.setState({\n        query: suggestion,\n        showSuggestions: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CitySearch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event-locator\",\n        children: \"Event Locator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"enter-city\",\n        children: \"Enter a city:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"city\",\n        value: this.state.query,\n        onChange: this.handleInputChanged,\n        onFocus: () => {\n          this.setState({\n            showSuggestions: true\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions\",\n        style: this.state.showSuggestions ? {} : {\n          display: 'none'\n        },\n        children: [this.state.suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.handleItemClicked(suggestion),\n          children: suggestion\n        }, suggestion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.handleItemClicked(\"all\"),\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"See all cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CitySearch;","map":{"version":3,"sources":["/Users/timtaylor/Documents/meet/src/CitySearch.js"],"names":["React","Component","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","render","display","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BE,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,eAAe,EAAEC;AAHb,KADuB;;AAAA,SAM/BC,kBAN+B,GAMTC,KAAD,IAAW;AAC5B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAML,WAAW,GAAG,KAAKO,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA6BC,QAAD,IAAc;AAC1D,eAAOA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BP,KAAK,CAACM,WAAN,EAA/B,IAAsD,CAAC,CAA9D;AACH,OAFmB,CAApB;AAGA,WAAKE,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAEM,KADG;AAEVL,QAAAA;AAFU,OAAd;AAIH,KAf8B;;AAAA,SAiB/Bc,iBAjB+B,GAiBVC,UAAD,IAAgB;AAChC,WAAKR,KAAL,CAAWS,YAAX,CAAwBD,UAAxB;AACA,WAAKF,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAEgB,UADG;AAEVd,QAAAA,eAAe,EAAE;AAFP,OAAd;AAKH,KAxB8B;AAAA;;AA0B/BgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KAAtD;AAA6D,QAAA,QAAQ,EAAE,KAAKI,kBAA5E;AAAgG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKU,QAAL,CAAc;AAAEZ,YAAAA,eAAe,EAAE;AAAnB,WAAd;AAA0C;AAA3J;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,eAAX,GAA6B,EAA7B,GAAkC;AAAEiB,UAAAA,OAAO,EAAE;AAAX,SAArE;AAAA,mBACK,KAAKpB,KAAL,CAAWE,WAAX,CAAuBmB,GAAvB,CAA4BJ,UAAD,iBACxB;AAAqB,UAAA,OAAO,EAAE,MAAM,KAAKD,iBAAL,CAAuBC,UAAvB,CAApC;AAAA,oBAA0EA;AAA1E,WAASA,UAAT;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAII;AAAI,UAAA,OAAO,EAAE,MAAM,KAAKD,iBAAL,CAAuB,KAAvB,CAAnB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA1C8B;;AA6CnC,eAAejB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './CitySearch.css';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    };\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.props.updateEvents(suggestion);\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <h1 className=\"event-locator\">Event Locator</h1>\n                <h4 className=\"enter-city\">Enter a city:</h4>\n                <input type=\"text\" className=\"city\" value={this.state.query} onChange={this.handleInputChanged} onFocus={() => { this.setState({ showSuggestions: true }) }} />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)} >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}